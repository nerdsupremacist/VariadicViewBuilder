
import Foundation
import SwiftUI

@_functionBuilder
struct VariadicViewBuilder { }

extension VariadicViewBuilder {

    public static func buildBlock() -> [AnyView] {
        return []
    }

    public static func buildBlock<Content : View>(_ content: Content) -> [AnyView] {
        return content.decompose()
    }

    % for numberOfComponents in range(3, 22):
    %{ generics = ", ".join(["C" + str(i) + " : View" for i in range(1, numberOfComponents)]) }%
    %{ arguments = ", ".join(["_ c" + str(i) + ": C" + str(i) + "" for i in range(1, numberOfComponents)]) }%
    %{ decomposition = ", ".join(["c" + str(i) + ".decompose()" for i in range(1, numberOfComponents)]) }%
    public static func buildBlock<${generics}>(${arguments}) -> [AnyView] {
        return [${decomposition}].flatMap { $0 }
    }

    % end
}
